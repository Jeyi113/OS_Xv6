diff --git a/proc.c b/proc.c
index 806b1b1..310a1f5 100644
--- a/proc.c
+++ b/proc.c
@@ -112,6 +112,8 @@ found:
   memset(p->context, 0, sizeof *p->context);
   p->context->eip = (uint)forkret;
 
+  p->pticks = ticks; // remeber the start ticks
+
   return p;
 }
 
@@ -249,6 +251,8 @@ exit(void)
 
   acquire(&ptable.lock);
 
+  cprintf("\n%s(%d) took %d ticks in wallclock\n", curproc->name, curproc->pid, ticks - curproc->pticks);
+
   // Parent might be sleeping in wait().
   wakeup1(curproc->parent);
 
@@ -265,6 +269,7 @@ exit(void)
   curproc->state = ZOMBIE;
   sched();
   panic("zombie exit");
+
 }
 
 // Wait for a child process to exit and return its pid.
diff --git a/proc.h b/proc.h
index 1647114..bc522b7 100644
--- a/proc.h
+++ b/proc.h
@@ -41,6 +41,7 @@ struct proc {
   char *kstack;                // Bottom of kernel stack for this process
   enum procstate state;        // Process state
   int pid;                     // Process ID
+  uint pticks;                  // Process ticks
   struct proc *parent;         // Parent process
   struct trapframe *tf;        // Trap frame for current syscall
   struct context *context;     // swtch() here to run process
